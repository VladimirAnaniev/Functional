main:: IO()
main = do
  print(prime 3)

sum_digits_iter:: Int -> Int
sum_digits_iter n = iter n 0
  where
  iter :: Int -> Int -> Int
  iter 0 sum = sum
  iter n sum = iter (n `div` 10) (sum + (n `mod` 10))
  
prime :: Int -> Bool
prime n 
  | n <= 1 = False
  | n == 2 = True
  | otherwise = check 2
    where 
    check :: Int -> Bool
    check i  
      | (n `mod` i) == 0 = False
      | (fromIntegral i) > sqrt (fromIntegral n) = True
      | otherwise = check (i + 1)



